name: test 1

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'release/**'


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      number: ${{ steps.random.outputs.number }}
    steps:
      - name: echo message
        id: random
        run: |
          random=$((1 + $RANDOM % 6))
          echo "##[set-output name=number::$random"

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: start build
        if:
        run: |
          echo "Starting build job...."

      - name: print if is one
        if: ${{needs.setup.outputs.number == 1}}
        run: |
          echo "the input number from setup is ${{needs.setup.outputs.number}}"

      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: build app
        run: |
          ./gradlew build -x test

      - name: end build
        run: |
          echo "eding build job"

  test:
    name: test app
    runs-on: ubuntu-latest
    needs: [setup, build]
    steps:
      - name: start test
        run: |
          echo "starting test job..."

      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: gradlew test
        run: |
          ./gradlew test

      - name: end test
        run: |
          echo "ending test job..."

  special-test:
    name: special test app
    runs-on: ubuntu-latest
    needs: [setup, build, test]
    strategy:
      matrix:
        greeding: [ hello, hola ]
        person: [ world, people ]
    steps:
      - name: start special test
        run: |
          echo "starting test job for ${{ matrix.greeding }} ${{ matrix.person }}..."

      - name: Checkout Code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: gradlew test
        run: |
          ./gradlew run --args "${{ matrix.greeding }} ${{ matrix.person }}"

      - name: end special test
        run: |
          echo "ending test job for ${{ matrix.greeding }} ${{ matrix.person }} ..."
